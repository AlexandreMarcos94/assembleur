     1                                  ; external functions from X11 library
     2                                  extern XOpenDisplay
     3                                  extern XDisplayName
     4                                  extern XCloseDisplay
     5                                  extern XCreateSimpleWindow
     6                                  extern XMapWindow
     7                                  extern XRootWindow
     8                                  extern XSelectInput
     9                                  extern XFlush
    10                                  extern XCreateGC
    11                                  extern XSetForeground
    12                                  extern XDrawLine
    13                                  extern XNextEvent
    14                                  
    15                                  ; external functions from stdio library (ld-linux-x86-64.so.2)    
    16                                  extern exit
    17                                  
    18                                  %define	StructureNotifyMask	131072
    19                                  %define KeyPressMask		1
    20                                  %define ButtonPressMask		4
    21                                  %define MapNotify		19
    22                                  %define KeyPress		2
    23                                  %define ButtonPress		4
    24                                  %define Expose			12
    25                                  %define ConfigureNotify		22
    26                                  %define CreateNotify 16
    27                                  %define QWORD	8
    28                                  %define DWORD	4
    29                                  %define WORD	2
    30                                  %define BYTE	1
    31                                  
    32                                  global main
    33                                  
    34                                  
    35                                  section .bss
    36 00000000 <res 00000008>          display_name:	resq	1
    37 00000008 <res 00000004>          screen:		resd	1
    38 0000000C <res 00000004>          depth:         	resd	1
    39 00000010 <res 00000004>          connection:    	resd	1
    40 00000014 <res 00000004>          width:         	resd	1
    41 00000018 <res 00000004>          height:        	resd	1
    42 0000001C <res 00000008>          window:		resq	1
    43 00000024 <res 00000008>          gc:		resq	1
    44                                  
    45                                  section .data
    46                                  
    47 00000000 0000000000000000-       event:		times	24 dq 0
    47 00000000 <rept>             
    48                                  
    49                                  ; Un point par ligne sous la forme X,Y,Z
    50 000000C0 0000000000004842AB-     dodec:	dd	0.0,50.0,80.901699		; point 0
    50 000000C9 CDA142             
    51 000000CC 00000000000048C2AB-     		dd 	0.0,-50.0,80.901699		; point 1
    51 000000D5 CDA142             
    52 000000D8 ABCDA1420000000000-     		dd 	80.901699,0.0,50.0		; point 2
    52 000000E1 004842             
    53 000000E4 ABCDA1420000000000-     		dd 	80.901699,0.0,-50.0		; point 3
    53 000000ED 0048C2             
    54 000000F0 0000000000004842AB-     		dd 	0.0,50.0,-80.901699		; point 4
    54 000000F9 CDA1C2             
    55 000000FC 00000000000048C2AB-     		dd 	0.0,-50.0,-80.901699	; point 5
    55 00000105 CDA1C2             
    56 00000108 ABCDA1C20000000000-     		dd 	-80.901699,0.0,-50.0	; point 6
    56 00000111 0048C2             
    57 00000114 ABCDA1C20000000000-     		dd 	-80.901699,0.0,50.0		; point 7
    57 0000011D 004842             
    58 00000120 00004842ABCDA14200-     		dd 	50.0,80.901699,0.0		; point 8
    58 00000129 000000             
    59 0000012C 000048C2ABCDA14200-     		dd 	-50.0,80.901699,0.0		; point 9
    59 00000135 000000             
    60 00000138 000048C2ABCDA1C200-     		dd 	-50.0,-80.901699,0.0	; point 10
    60 00000141 000000             
    61 00000144 00004842ABCDA1C200-     		dd	50.0,-80.901699,0.0		; point 11
    61 0000014D 000000             
    62                                  
    63                                  ; Une face par ligne, chaque face est composée de 3 points tels que numérotés dans le tableau dodec ci-dessus
    64                                  ; Les points sont donnés dans le bon ordre pour le calcul des normales.
    65                                  ; Exemples :
    66                                  ; pour la première face (0,8,9), on fera le produit vectoriel des vecteurs 80 (vecteur des points 8 et 0) et 89 (vecteur des points 8 et 9)	
    67                                  ; pour la deuxième face (0,2,8), on fera le produit vectoriel des vecteurs 20 (vecteur des points 2 et 0) et 28 (vecteur des points 2 et 8)
    68                                  ; etc...
    69 00000150 000000000800000009-     faces:	dd	0,8,9,0
    69 00000159 00000000000000     
    70 00000160 000000000200000008-     		dd	0,2,8,0
    70 00000169 00000000000000     
    71 00000170 020000000300000008-     		dd	2,3,8,2
    71 00000179 00000002000000     
    72 00000180 030000000400000008-     		dd	3,4,8,3
    72 00000189 00000003000000     
    73 00000190 040000000900000008-     		dd	4,9,8,4
    73 00000199 00000004000000     
    74 000001A0 060000000900000004-     		dd	6,9,4,6
    74 000001A9 00000006000000     
    75 000001B0 070000000900000006-     		dd	7,9,6,7
    75 000001B9 00000007000000     
    76 000001C0 070000000000000009-     		dd	7,0,9,7
    76 000001C9 00000007000000     
    77 000001D0 010000000A0000000B-     		dd	1,10,11,1
    77 000001D9 00000001000000     
    78 000001E0 010000000B00000002-     		dd	1,11,2,1
    78 000001E9 00000001000000     
    79 000001F0 0B0000000300000002-     		dd	11,3,2,11
    79 000001F9 0000000B000000     
    80 00000200 0B0000000500000003-     		dd	11,5,3,11
    80 00000209 0000000B000000     
    81 00000210 0B0000000A00000005-     		dd	11,10,5,11
    81 00000219 0000000B000000     
    82 00000220 0A0000000600000005-     		dd	10,6,5,10
    82 00000229 0000000A000000     
    83 00000230 0A0000000700000006-     		dd	10,7,6,10
    83 00000239 0000000A000000     
    84 00000240 0A0000000100000007-     		dd	10,1,7,10
    84 00000249 0000000A000000     
    85 00000250 000000000700000001-     		dd	0,7,1,0
    85 00000259 00000000000000     
    86 00000260 000000000100000002-     		dd	0,1,2,0
    86 00000269 00000000000000     
    87 00000270 030000000500000004-     		dd	3,5,4,3
    87 00000279 00000003000000     
    88 00000280 050000000600000004-     		dd	5,6,4,5
    88 00000289 00000005000000     
    89                                  
    90                                  
    91                                  section .text
    92                                  
    93                                  
    94                                  ;##################################################
    95                                  ;########### PROGRAMME PRINCIPAL ##################
    96                                  ;##################################################
    97                                  
    98                                  main:
    99                                  
   100                                  ;####################################
   101                                  ;## Code de création de la fenêtre ##
   102                                  ;####################################
   103 00000000 4831FF                  xor     rdi,rdi
   104 00000003 E8(00000000)            call    XOpenDisplay	; Création de display
   105 00000008 48890425[00000000]      mov     qword[display_name],rax	; rax=nom du display
   106                                  
   107 00000010 488B0425[00000000]      mov     rax,qword[display_name]
   108 00000018 8B80E0000000            mov     eax,dword[rax+0xe0]
   109 0000001E 890425[08000000]        mov     dword[screen],eax
   110                                  
   111 00000025 488B3C25[00000000]      mov rdi,qword[display_name]
   112 0000002D 8B3425[08000000]        mov esi,dword[screen]
   113 00000034 E8(00000000)            call XRootWindow
   114 00000039 4889C3                  mov rbx,rax
   115                                  
   116 0000003C 488B3C25[00000000]      mov rdi,qword[display_name]
   117 00000044 4889DE                  mov rsi,rbx
   118 00000047 BA0A000000              mov rdx,10
   119 0000004C B90A000000              mov rcx,10
   120 00000051 41B890010000            mov r8,400	; largeur
   121 00000057 41B990010000            mov r9,400	; hauteur
   122 0000005D 68FFFFFF00              push 0xFFFFFF	; background  0xRRGGBB
   123 00000062 6800FF0000              push 0x00FF00
   124 00000067 6A01                    push 1
   125 00000069 E8(00000000)            call XCreateSimpleWindow
   126 0000006E 48890425[1C000000]      mov qword[window],rax
   127                                  
   128 00000076 488B3C25[00000000]      mov rdi,qword[display_name]
   129 0000007E 488B3425[1C000000]      mov rsi,qword[window]
   130 00000086 BA05000200              mov rdx,131077 ;131072
   131 0000008B E8(00000000)            call XSelectInput
   132                                  
   133 00000090 488B3C25[00000000]      mov rdi,qword[display_name]
   134 00000098 488B3425[1C000000]      mov rsi,qword[window]
   135 000000A0 E8(00000000)            call XMapWindow
   136                                  
   137 000000A5 488B3C25[00000000]      mov rdi,qword[display_name]
   138 000000AD 488B3425[1C000000]      mov rsi,qword[window]
   139 000000B5 BA00000000              mov rdx,0
   140 000000BA B900000000              mov rcx,0
   141 000000BF E8(00000000)            call XCreateGC
   142 000000C4 48890425[24000000]      mov qword[gc],rax
   143                                  
   144 000000CC 488B3C25[00000000]      mov rdi,qword[display_name]
   145 000000D4 488B3425[24000000]      mov rsi,qword[gc]
   146 000000DC BA00000000              mov rdx,0x000000	; Couleur du crayon
   147 000000E1 E8(00000000)            call XSetForeground
   148                                  
   149                                  ; boucle de gestion des évènements
   150                                  boucle: 
   151 000000E6 488B3C25[00000000]      	mov rdi,qword[display_name]
   152 000000EE 48BE-                   	mov rsi,event
   152 000000F0 [0000000000000000] 
   153 000000F8 E8(00000000)            	call XNextEvent
   154                                  
   155 000000FD 833C25[00000000]16      	cmp dword[event],ConfigureNotify
   156 00000105 740C                    	je prog_principal
   157 00000107 833C25[00000000]02      	cmp dword[event],KeyPress
   158 0000010F 741A                    	je closeDisplay
   159 00000111 EBD3                    jmp boucle
   160                                  
   161                                  ;###########################################
   162                                  ;## Fin du code de création de la fenêtre ##
   163                                  ;###########################################
   164                                  
   165                                  ;############################################
   166                                  ;##	Ici commence VOTRE programme principal ##
   167                                  ;############################################ 
   168                                  prog_principal:
   169                                  
   170                                  
   171                                  ;##############################################
   172                                  ;##	Ici se termine VOTRE programme principal ##
   173                                  ;##############################################																																																																																																																																	     		     		jb boucle
   174 00000113 EB00                    jmp flush
   175                                  
   176                                  
   177                                  
   178                                  flush:
   179 00000115 488B3C25[00000000]      mov rdi,qword[display_name]
   180 0000011D E8(00000000)            call XFlush
   181 00000122 EBC2                    jmp boucle
   182 00000124 B822000000              mov rax,34
   183 00000129 0F05                    syscall
   184                                  
   185                                  closeDisplay:
   186 0000012B 488B0425[00000000]          mov     rax,qword[display_name]
   187 00000133 4889C7                      mov     rdi,rax
   188 00000136 E8(00000000)                call    XCloseDisplay
   189 0000013B 4831FF                      xor	    rdi,rdi
   190 0000013E E8(00000000)                call    exit
   191                                  
   192                                  	
